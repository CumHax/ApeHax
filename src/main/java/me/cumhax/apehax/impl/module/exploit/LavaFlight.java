package me.cumhax.apehax.impl.module.exploit;

import me.cumhax.apehax.api.module.Category;
import me.cumhax.apehax.api.module.Module;
import me.cumhax.apehax.api.setting.Setting;
import me.cumhax.apehax.api.setting.SettingType;
import me.cumhax.apehax.impl.event.MovementUtils;
import net.minecraft.client.Minecraft;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
import net.minecraftforge.fml.common.gameevent.TickEvent;

public class LavaFlight extends Module {

	private final Setting hSpeed = new Setting.Builder(SettingType.INTEGER).setName("H Speed").setModule(this)
			.setIntegerValue(10).setMinIntegerValue(1).setMaxIntegerValue(25).build();

	private final Setting ySpeed = new Setting.Builder(SettingType.INTEGER).setName("Y Speed").setModule(this)
			.setIntegerValue(10).setMinIntegerValue(1).setMaxIntegerValue(25).build();

	public LavaFlight(String name, String description, Category category) {
		super(name, description, category);
		addSetting(hSpeed);
		addSetting(ySpeed);
	}

	@SubscribeEvent
	public void onTick(TickEvent.ClientTickEvent event) {
		if (mc.player == null) {
			return;
		}

		// mc.player.capabilities.isFlying = true;
		if (mc.gameSettings.keyBindJump.isKeyDown()) {
			// mc.player.capabilities.setFlySpeed(((float) ySpeed.getValue()) / 2);

			mc.player.motionY = ySpeed.getIntegerValue() / 10;
		} else if (mc.gameSettings.keyBindSneak.isKeyDown()) {
			mc.player.motionY = (ySpeed.getIntegerValue() / 10 * -1);
			// mc.player.motionY = 0;
			// mc.player.capabilities.setFlySpeed(((float) hSpeed.getValue()) / 2);
		} else
			mc.player.motionY = 0;

		double yaw = MovementUtils.calcMoveYaw(mc.player.rotationYaw);
		double motX = 0;
		double motZ = 0;

		yaw -= mc.player.moveStrafing * 90;

		if (mc.gameSettings.keyBindBack.isKeyDown() && !mc.gameSettings.keyBindForward.isKeyDown()) {
			motX = (-Math.sin(yaw) * hSpeed.getIntegerValue() / 10) * -1;
			motZ = (Math.cos(yaw) * hSpeed.getIntegerValue() / 10) * -1;
		} else if (mc.gameSettings.keyBindForward.isKeyDown()) {
			motX = -Math.sin(yaw) * hSpeed.getIntegerValue() / 10;
			motZ = Math.cos(yaw) * hSpeed.getIntegerValue() / 10;
		}

		mc.player.motionX = motX;
		mc.player.motionZ = motZ;

		if (mc.player.moveStrafing == 0 && mc.player.moveForward == 0) {
			mc.player.motionX = 0;
			mc.player.motionZ = 0;
		}
	}

}
